dnl silly Poker configure.in

dnl include Qt finding macros. is there another way I should do this?
builtin(include, qt.m4)

AC_INIT(src/poker.h)
AM_INIT_AUTOMAKE(sillypoker, 0.25.5)

AC_PREFIX_DEFAULT(/usr/local)

AM_PROG_LIBTOOL
AC_PROG_CC
AC_ISC_POSIX
AC_PROG_CXX
AM_PROG_CC_STDC
AC_HEADER_STDC
AC_CHECK_HEADERS(sys/time.h)
AC_HEADER_TIME
AC_PATH_X

dnl get the debug values right
AC_DEFUN(AC_SET_DEBUG,
[
 CFLAGS="-g -W -Wall"
 CXXFLAGS="-g -W -Wall"
 LDFLAGS=""
])
AC_DEFUN(AC_SET_NODEBUG,
[
 test -z "$CFLAGS" && CFLAGS="-O2 -Wall"
 test -z "$CXXFLAGS" && CXXFLAGS="-O2 -Wall"
 LDFLAGS="$LDFLAGS"
])
AC_ARG_ENABLE(debug,[  --enable-debug          use debugging compiler flags [default=no]],
[
if test $enableval = "no";
 then AC_SET_NODEBUG
 else AC_SET_DEBUG
      debug=yes
fi
],
AC_SET_NODEBUG)

AC_CHECK_LIB(Brain,sense_of_humour, , [
echo "Warning: No sense of humour found."
echo "         Please ask the nearest person to make crude comments until this"
echo "         situation is rectified."
])

AC_DEFUN(AC_CHECK_NCURSES,
[
  AC_CHECK_LIB(ncurses, initscr, [
    if test "$debug" = "yes"
      then LIBS="-lpanel_g -lncurses_g $LIBS"
      else LIBS="-lpanel -lncurses $LIBS"
    fi
    AC_DEFINE(HAVE_NCURSES)
  ], [
    AC_CHECK_LIB(curses, initscr, [
      AC_CHECK_LIB(panel, new_panel, [
        LIBS="-lpanel -lcurses $LIBS"
        AC_DEFINE(HAVE_NCURSES)
      ], [
        AC_MSG_WARN([libpanel not found, not building ncurses UI.])
      ])
    ], [
      AC_MSG_WARN([curses not found, not building ncurses UI.])
    ])
  ])
])

AC_MSG_CHECKING(whether to enable ncurses interface)
AC_ARG_ENABLE(ncurses,
  [  --enable-ncurses        enable the ncurses interface [default=yes]],[
  if test "$enableval" = "no"
    then AC_MSG_RESULT(no)
    else AC_MSG_RESULT(yes)
         AC_CHECK_NCURSES
  fi
  ],[
    AC_MSG_RESULT(yes)
    AC_CHECK_NCURSES
])

AC_DEFUN(AC_CHECK_QT,
[
  AC_PATH_QT_LIB
  AC_PATH_QT_INC
  AC_PATH_QT_MOC
  AM_CONDITIONAL(QT, test -e "$MOC")
  if test "$have_qt_lib" = "yes" && test "$have_qt_inc" = "yes" && test -e "$MOC"
    then AC_DEFINE(HAVE_QT)
         LIBS="-lqt $LIBS"
         AC_SUBST(QT_INCLUDES)
         AC_SUBST(QT_LDFLAGS)
         AC_SUBST(MOC)
    else AC_MSG_WARN([Qt 2.1 not found, not building Qt interface.])
  fi
])

AC_MSG_CHECKING([whether to enable Qt interface])
AC_ARG_ENABLE(qt,
  [  --enable-qt             enable the Qt interface [default=no]], [
  if test "$enableval" = "yes"
    then AC_MSG_RESULT(yes)
         AC_CHECK_QT
    else AC_MSG_RESULT(no)
  fi
  ], [
    AC_MSG_RESULT(no)
])


AC_OUTPUT([
Makefile
doc/Makefile
src/menus/Makefile
src/Makefile
])

